.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

body {
  overflow-x: hidden; }

p {
  font-size: 20px; }

p.small {
  font-size: 16px; }

a,
a:hover,
a:focus,
a:active,
a.active {
  outline: 0;
  color: #18bc9c; }

h1,
h2,
h3,
h4,
h5,
h6 {
  text-transform: uppercase;
  font-family: Montserrat, "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 700; }

hr.star-light,
hr.star-primary {
  margin: 25px auto 30px;
  padding: 0;
  max-width: 250px;
  border: 0;
  border-top: solid 5px;
  text-align: center; }

hr.star-light:after,
hr.star-primary:after {
  content: "\f005";
  display: inline-block;
  position: relative;
  top: -.8em;
  padding: 0 0.25em;
  font-family: FontAwesome;
  font-size: 2em; }

hr.star-light {
  border-color: #fff; }

hr.star-light:after {
  color: #fff;
  background-color: #18bc9c; }

hr.star-primary {
  border-color: #2c3e50; }

hr.star-primary:after {
  color: #2c3e50;
  background-color: #fff; }

.img-centered {
  margin: 0 auto; }

header {
  text-align: center;
  color: #fff;
  background: #18bc9c; }

header .container {
  padding-top: 100px;
  padding-bottom: 50px; }

header img {
  display: block;
  margin: 0 auto 20px; }

header .intro-text .name {
  display: block;
  text-transform: uppercase;
  font-family: Montserrat, "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: 2em;
  font-weight: 700; }

header .intro-text .job {
  font-size: 1.25em;
  font-weight: 300; }

@media (min-width: 768px) {
  header .container {
    padding-top: 200px;
    padding-bottom: 100px; }
  header .intro-text .name {
    font-size: 4.75em; }
  header .intro-text .job {
    font-size: 1.75em; } }

@media (min-width: 768px) {
  .navbar-fixed-top {
    padding: 25px 0;
    -webkit-transition: padding 0.3s;
    transition: padding 0.3s; }
  .navbar-fixed-top .navbar-brand {
    font-size: 2em;
    -webkit-transition: all 0.3s;
    transition: all 0.3s; }
  .navbar-fixed-top.navbar-shrink {
    padding: 10px 0; }
  .navbar-fixed-top.navbar-shrink .navbar-brand {
    font-size: 1.5em; } }

.navbar {
  text-transform: uppercase;
  font-family: Montserrat, "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 700; }

.navbar a:focus {
  outline: 0; }

.navbar .navbar-nav {
  letter-spacing: 1px; }

.navbar .navbar-nav li a:focus {
  outline: 0; }

.navbar-default,
.navbar-inverse {
  border: 0; }

section {
  padding: 100px 0; }

section h2 {
  margin: 0;
  font-size: 3em; }

section.success {
  color: #fff;
  background: #18bc9c; }

section.success a,
section.success a:hover,
section.success a:focus,
section.success a:active,
section.success a.active {
  outline: 0;
  color: #2c3e50; }

@media (max-width: 767px) {
  section {
    padding: 75px 0; }
  section.first {
    padding-top: 75px; } }

#portfolio .portfolio-item {
  right: 0;
  margin: 0 0 15px; }

#portfolio .portfolio-item .portfolio-link {
  display: block;
  position: relative;
  margin: 0 auto;
  max-width: 400px; }

#portfolio .portfolio-item .portfolio-link .caption {
  position: absolute;
  width: 100%;
  height: 100%;
  opacity: 0;
  background: rgba(24, 188, 156, 0.9);
  -webkit-transition: all ease 0.5s;
  transition: all ease 0.5s; }

#portfolio .portfolio-item .portfolio-link .caption:hover {
  opacity: 1; }

#portfolio .portfolio-item .portfolio-link .caption .caption-content {
  position: absolute;
  top: 50%;
  width: 100%;
  height: 20px;
  margin-top: -12px;
  text-align: center;
  font-size: 20px;
  color: #fff; }

#portfolio .portfolio-item .portfolio-link .caption .caption-content i {
  margin-top: -12px; }

#portfolio .portfolio-item .portfolio-link .caption .caption-content h3,
#portfolio .portfolio-item .portfolio-link .caption .caption-content h4 {
  margin: 0; }

#portfolio * {
  z-index: 2; }

@media (min-width: 767px) {
  #portfolio .portfolio-item {
    margin: 0 0 30px; } }

.btn-outline {
  margin-top: 15px;
  border: solid 2px #fff;
  font-size: 20px;
  color: #fff;
  background: 0 0;
  -webkit-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }

.btn-outline:hover,
.btn-outline:focus,
.btn-outline:active,
.btn-outline.active {
  border: solid 2px #fff;
  color: #18bc9c;
  background: #fff; }

.floating-label-form-group {
  position: relative;
  margin-bottom: 0;
  padding-bottom: .5em;
  border-bottom: 1px solid #eee; }

.floating-label-form-group input,
.floating-label-form-group textarea {
  z-index: 1;
  position: relative;
  padding-right: 0;
  padding-left: 0;
  border: 0;
  border-radius: 0;
  font-size: 1.5em;
  background: 0 0;
  box-shadow: none !important;
  resize: none; }

.floating-label-form-group label {
  display: block;
  z-index: 0;
  position: relative;
  top: 2em;
  margin: 0;
  font-size: .85em;
  line-height: 1.764705882em;
  vertical-align: middle;
  vertical-align: baseline;
  opacity: 0;
  -webkit-transition: top 0.3s ease, opacity 0.3s ease;
  transition: top 0.3s ease, opacity 0.3s ease; }

.floating-label-form-group::not(:first-child) {
  padding-left: 14px;
  border-left: 1px solid #eee; }

.floating-label-form-group-with-value label {
  top: 0;
  opacity: 1; }

.floating-label-form-group-with-focus label {
  color: #18bc9c; }

form .row:first-child .floating-label-form-group {
  border-top: 1px solid #eee; }

footer {
  color: #fff; }

footer h3 {
  margin-bottom: 30px; }

footer .footer-above {
  padding-top: 50px;
  background-color: #2c3e50; }

footer .footer-col {
  margin-bottom: 50px; }

footer .footer-below {
  padding: 25px 0;
  background-color: #233140; }

.btn-social {
  display: inline-block;
  width: 50px;
  height: 50px;
  border: 2px solid #fff;
  border-radius: 100%;
  text-align: center;
  font-size: 20px;
  line-height: 45px; }

.btn:focus,
.btn:active,
.btn.active {
  outline: 0; }

.scroll-top {
  z-index: 1049;
  position: fixed;
  right: 2%;
  bottom: 2%;
  width: 50px;
  height: 50px; }

.scroll-top .btn {
  width: 50px;
  height: 50px;
  border-radius: 100%;
  font-size: 20px;
  line-height: 28px; }

.scroll-top .btn:focus {
  outline: 0; }

.portfolio-modal .modal-content {
  padding: 100px 0;
  min-height: 100%;
  border: 0;
  border-radius: 0;
  text-align: center;
  background-clip: border-box;
  box-shadow: none; }

.portfolio-modal .modal-content h2 {
  margin: 0;
  font-size: 3em; }

.portfolio-modal .modal-content img {
  margin-bottom: 30px; }

.portfolio-modal .modal-content .item-details {
  margin: 30px 0; }

.portfolio-modal .close-modal {
  position: absolute;
  top: 25px;
  right: 25px;
  width: 75px;
  height: 75px;
  background-color: transparent;
  cursor: pointer; }

.portfolio-modal .close-modal:hover {
  opacity: .3; }

.portfolio-modal .close-modal .lr {
  z-index: 1051;
  width: 1px;
  height: 75px;
  margin-left: 35px;
  background-color: #2c3e50;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg); }

.portfolio-modal .close-modal .lr .rl {
  z-index: 1052;
  width: 1px;
  height: 75px;
  background-color: #2c3e50;
  -webkit-transform: rotate(90deg);
  -ms-transform: rotate(90deg);
  transform: rotate(90deg); }

.portfolio-modal .modal-backdrop {
  display: none;
  opacity: 0; }

.message, .message-highlight {
  font-size: 20px;
  color: #F3F3F3;
  line-height: 28px; }

.message {
  font-style: italic; }

.message-highlight {
  /*font-style: normal;*/
  font-weight: bold;
  color: #2C3E50; }

header .biopic {
  width: 250px;
  height: 250px; }

.skills {
  display: -webkit-flex;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-justify-content: space-around;
  -ms-flex-pack: distribute;
  justify-content: space-around;
  font-size: 18px;
  padding: 20px 10px 10px;
  list-style-type: none; }

#resume h3 {
  text-align: center; }

@media (min-width: 768px) {
  #resume h3 {
    text-align: left; } }

#resume .education {
  margin-top: 30px; }

#resume .work-experience {
  margin-top: 50px; }

.panel-group.resume {
  position: relative;
  margin-top: 30px; }

.panel-group.resume .resume-item {
  position: relative;
  margin-bottom: 40px; }

@media (min-width: 568px) {
  .panel-group.resume .resume-item {
    margin-bottom: 20px; } }

@media (min-width: 768px) {
  .panel-group.resume .resume-item:before {
    position: absolute;
    content: '';
    width: 1px;
    height: calc(100% + 20px);
    top: 0;
    left: 170px;
    border-left: 1px dashed #484848; } }

.panel-group.resume .resume-item:last-child {
  margin-bottom: 0px; }

.panel-group.resume .resume-item:last-child:before {
  display: none; }

.panel-group.resume .resume-item .resume-year {
  display: block;
  position: relative;
  width: 120px;
  height: 40px;
  margin-bottom: -20px;
  margin-right: auto;
  margin-left: auto;
  line-height: 40px;
  color: #fff;
  background-color: #c80a48;
  text-align: center;
  font-weight: 700;
  text-transform: uppercase;
  border-radius: 4px; }

@media (min-width: 568px) {
  .panel-group.resume .resume-item .resume-year {
    position: absolute;
    top: 0;
    left: 0;
    margin: 0; } }

.panel-group.resume .resume-item .resume-btn {
  position: absolute;
  z-index: 5;
  top: 0;
  left: 150px;
  width: 40px;
  height: 40px;
  background-color: #2e2e2e;
  border-radius: 4px; }

@media (max-width: 767px) {
  .panel-group.resume .resume-item .resume-btn {
    display: none; } }

.panel-group.resume .resume-item .resume-btn > a {
  display: block;
  position: absolute;
  z-index: 10;
  top: 0;
  left: 0;
  width: 40px;
  height: 40px; }

.panel-group.resume .resume-item .resume-btn > a:before {
  display: block;
  position: absolute;
  z-index: 15;
  content: '-';
  top: 0;
  left: 0;
  width: 40px;
  height: 40px;
  line-height: 38px;
  color: #ffffff;
  font-size: 30px;
  font-weight: 700;
  text-align: center; }

.panel-group.resume .resume-item .resume-btn > a.collapsed:before {
  content: '+'; }

.panel-group.resume .resume-item .panel {
  padding: 10px;
  width: 100%;
  background: transparent;
  border: 1px solid #6e6e6e;
  border-radius: 0px; }

@media (min-width: 568px) {
  .panel-group.resume .resume-item .panel {
    width: calc(100% - 140px);
    margin-left: 140px; } }

@media (min-width: 768px) {
  .panel-group.resume .resume-item .panel {
    width: calc(100% - 210px);
    margin-left: 210px; } }

.panel-group.resume .resume-item .panel .panel-heading {
  position: relative; }

.panel-group.resume .resume-item .panel .panel-heading .panel-title {
  text-transform: uppercase; }

@media (max-width: 567px) {
  .panel-group.resume .resume-item .panel .panel-heading .panel-title {
    padding-top: 20px; } }

.panel-group.resume .resume-item .panel .panel-collapse .panel-body {
  padding-top: 5px;
  border-top: none; }

.panel-group.resume .resume-item .panel .panel-collapse .panel-body p {
  margin-bottom: 0px; }

.text-grey {
  color: #a1a1a1;
  font-size: 10px; }

.carousel-indicators {
  bottom: -50px; }

.carousel-indicators li {
  border-color: #2C3E50;
  background-color: #FFF; }

.carousel-indicators .active {
  background-color: #2C3E50; }

.carousel-inner {
  margin-bottom: 50px; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=data:application/json;base64, */

/*# sourceMappingURL=data:application/json;base64, */